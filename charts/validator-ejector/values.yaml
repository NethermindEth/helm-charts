# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

global:
  # Secret with the password for the loader (data.MESSAGES_PASSWORD)
  secretName: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: lidofinance/validator-ejector
  pullPolicy: IfNotPresent
  tag: "1.8.0"

loader:
  enabled: true

  image:
    repository: nethermindeth/eth-exit-messages
    pullPolicy: IfNotPresent
    tag: "v0.0.26"

  config:
    # -- Password to encrypt exit messages with. Needed only if you encrypt your exit messages, same value should be used in the validator ejector config
    EIP2335_PASSWORD: "password"
    ENCRYPTION: "EIP2335"
    ENCRYPT_WITH_METADATA: "false"
    BEACON_ENDPOINT: "http://localhost:5052"
    # CUSTODIAN_WEB3SIGNER_MAPPER: '{"custodian1/second": "http://localhost:9110"}'
    STORAGE_LOCATION: "/data/messages"
    FETCH_INTERVAL: "60"
    SIGNER_MAPPER: '{}'
    LOADER_MAPPER: '{}'
    KEY_LOADER_TYPE: "WEB3SIGNER"
    ENCRYPTION_TYPE: "EIP2335"
    LidoKAPI_OPERATOR_ID: ""
    LidoKAPI_KEYS_PERCENT: ""
  volumeMounts: []
  env: []

# -- Validator Ejector configuration
# Reference: https://github.com/lidofinance/validator-ejector/tree/main
config:
  #########################################################
  # REQUIRED CONFIGURATION
  #########################################################
  # -- Ethereum Consensus Node endpoint
  CONSENSUS_NODE: "http://localhost:5052"
  # -- Ethereum Execution Node endpoint
  EXECUTION_NODE: "http://localhost:8545"
  # -- Address of the Locator contract, can be found in the lido-dao repo
  LOCATOR_ADDRESS: "0x12cd349E19Ab2ADBE478Fc538A66C059Cf40CFeC"
  # -- Staking Module ID for which operator ID is set
  STAKING_MODULE_ID: "123"
  # -- Operator ID in the Node Operators registry, easiest to get from Operators UI
  OPERATOR_ID: "123"
  # -- Allowed Oracle addresses to accept transactions
  ORACLE_ADDRESSES_ALLOWLIST: '[]'

  #########################################################
  # OPTIONAL CONFIGURATION
  #########################################################
  # -- Folder to load json exit message files from
  MESSAGES_LOCATION: "/data/messages"
  # -- Password to decrypt encrypted exit messages with. Needed only if you encrypt your exit messages, same value should be used in the loader config
  # MESSAGES_PASSWORD: "password"
  # -- Path to a file with password inside to decrypt exit messages with. Needed only if you have encrypted exit messages. If used, MESSAGES_PASSWORD (not MESSAGES_PASSWORD_FILE) needs to be added to LOGGER_SECRETS in order to be sanitized
  # MESSAGES_PASSWORD_FILE: "password_inside.txt"
  # -- POST validator info to an endpoint instead of sending out an exit message in order to initiate an exit.
  # Required if you are using webhook mode
  # VALIDATOR_EXIT_WEBHOOK: ""
  # -- Amount of blocks to load events from on start.
  # Increase if daemon was not running for some time. Defaults to a day of blocks
  # BLOCKS_PRELOAD: "7200"
  # -- Amount of blocks to load events from on every poll. Defaults to 1 epoch
  # BLOCKS_LOOP: "32"
  # -- Time interval in milliseconds to run checks. Defaults to time of 1 epoch
  # JOB_INTERVAL: "384000"
  # -- Port to serve metrics and health check on
  # HTTP_PORT: "8989"
  # -- Enable metrics endpoint
  # RUN_METRICS: "true"
  # -- Enable health check endpoint
  # RUN_HEALTH_CHECK: "true"
  # -- Severity level from which to start showing errors eg info will hide debug messages
  # LOGGER_LEVEL: "info"
  # -- Simple or JSON log output: simple/json
  # LOGGER_FORMAT: "simple"
  # -- JSON string array of either env var keys to sanitize in logs or exact values
  # LOGGER_SECRETS: '["MESSAGES_PASSWORD"]'
  # -- Run the service without actually sending out exit messages
  # DRY_RUN: "false"


# -- Set persistence to true to enable persistent storage for the application.
persistence:
  enabled: false
  storageClassName: ""
  mountPath: /data
  accessModes:
    - ReadWriteOnce
  size: 10Gi

# -- Command and args for the container
command: []
args: []

# -- Working directory for the container. If not set, the container's default will be used.
workingDir: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    - name: metrics
      port: 8989
      protocol: TCP

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: metrics
readinessProbe:
  httpGet:
    path: /
    port: metrics

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator. https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Port name
  port: metrics
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
