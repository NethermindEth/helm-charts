####################################
# Aztec Network
####################################

replicaCount: 1

image:
  repository: aztecprotocol/aztec
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.67.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

args:
  - "start"
  - "--node"
  - "--archiver"
  - "--sequencer"

config:
  DATA_DIRECTORY: /local-data
  ETHEREUM_HOST: ""
  P2P_TCP_LISTEN_ADDR: 0.0.0.0:40400
  P2P_UDP_LISTEN_ADDR: 0.0.0.0:40400
  COINBASE: "0xbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
  VALIDATOR_DISABLED: "false"
  DEBUG: "aztec:*,-aztec:avm_simulator*,-aztec:circuits:artifact_hash,-aztec:libp2p_service,-json-rpc*,-aztec:world-state:database,-aztec:l2_block_stream*"
  LOG_LEVEL: debug
  AZTEC_PORT: "8080"
  P2P_ENABLED: "true"
  L1_CHAIN_ID: "1337"
  PROVER_REAL_PROOFS: "true"
  PXE_PROVER_ENABLED: "true"
  ETHEREUM_SLOT_DURATION: 6sec
  AZTEC_SLOT_DURATION: "36"
  AZTEC_EPOCH_DURATION: "32"
  AZTEC_EPOCH_PROOF_CLAIM_WINDOW_IN_L2_SLOTS: "13"
  BOOTSTRAP_NODES: ""
  REGISTRY_CONTRACT_ADDRESS: ""
  GOVERNANCE_PROPOSER_CONTRACT_ADDRESS: ""
  FEE_JUICE_CONTRACT_ADDRESS: ""
  ROLLUP_CONTRACT_ADDRESS: ""
  REWARD_DISTRIBUTOR_CONTRACT_ADDRESS: ""
  GOVERNANCE_CONTRACT_ADDRESS: ""
  COIN_ISSUER_CONTRACT_ADDRESS: ""
  FEE_JUICE_PORTAL_CONTRACT_ADDRESS: ""
  INBOX_CONTRACT_ADDRESS: ""
  OUTBOX_CONTRACT_ADDRESS: ""

# Secret containing the validator keys
validatorKeysSecret: "aztec-validator-keys"

# Additional commands to setup environment variables before starting the app
extraInitScript: |
  echo "Running extra init commands..."
  echo "Done"

env: []


# Extra manifests
extraObjects: []
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     name: '{{ include "aztec-prover.fullname" . }}'
#   stringData:
#     PROVER_PUBLISHER_PRIVATE_KEY: "<PRIVATE KEY>"

envFrom:
  []
  # - secretRef:
  #     name: '{{ include "aztec-prover.fullname" . }}'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true

podAnnotations: {}
podLabels: {}

service:
  type: NodePort
  internalServiceType: ClusterIP
  ports:
    p2p: 40400
    http: 8080

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe: null
  # httpGet:
  #   path: /status
  #   port: p2p-tcp
readinessProbe: null
  # httpGet:
  #   path: /status
  #   port: p2p-tcp

persistence:
  enabled: false
  size: 50Gi
  storageClass: ""
  mountPath: "/data"
  accessModes:
    - "ReadWriteOnce"

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Init container settings
initContainer:
  image:
    repository: bitnami/kubectl
    tag: 1.28
  volumeMounts: []

# Extra init containers
extraInitContainers: []

# Default security settings for the pod
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

# Default security settings for containers
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault

# Security settings for init containers
initContainerSecurityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
