# Default values for aztec-prover.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: aztecprotocol/aztec
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "provernet"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

command: []

args:
  - "start"
  - "--prover-node"
  - "--archiver"

config:
  ETHEREUM_HOST: ""
  L1_CHAIN_ID: ""
  DATA_DIRECTORY: "/data"
  AZTEC_PORT: "8080"
  PROVER_COORDINATION_NODE_URL: ""
  # PROVER_PUBLISHER_PRIVATE_KEY: "" # Set this via secret
  PROVER_AGENT_ENABLED: "false"
  PROVER_REAL_PROOFS: "true"
  LOG_LEVEL: info
  LOG_JSON: ""
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: ""

env: []
  # - name: PROVER_PUBLISHER_PRIVATE_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       key: PROVER_PUBLISHER_PRIVATE_KEY
  #       name: aztec-prover

# Extra manifests
extraObjects: []
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     name: '{{ include "aztec-prover.fullname" . }}'
#   stringData:
#     PROVER_PUBLISHER_PRIVATE_KEY: "<PRIVATE KEY>"

envFrom:
  []
  # - secretRef:
  #     name: '{{ include "aztec-prover.fullname" . }}'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /status
    port: http
readinessProbe:
  httpGet:
    path: /status
    port: http

persistence:
  enabled: true
  size: 50Gi
  storageClass: ""
  mountPath: "/data"
  accessModes:
    - "ReadWriteOnce"

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
