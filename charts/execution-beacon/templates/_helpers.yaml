{{/* vim: set filetype=mustache: */}}

{{/*
Override common.names.serviceAccountName to use only top-level serviceAccount
(not global.serviceAccount which was moved out of global scope)
*/}}
{{- define "common.names.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "common.names.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Override common.names.clusterRoleName to use only top-level rbac
(not global.rbac which was moved out of global scope)
*/}}
{{- define "common.names.clusterRoleName" -}}
{{- if .Values.rbac.create }}
{{- default (include "common.names.fullname" .) .Values.rbac.name }}
{{- else }}
{{- default "default" .Values.rbac.name }}
{{- end }}
{{- end }}

{{- define "execution.p2pPort" -}}
{{- printf "30303" -}}
{{- end -}}
{{- define "prysm.p2pPort" -}}
{{- printf "13000" -}}
{{- end -}}
{{- define "lighthouse.p2pPort" -}}
{{- printf "9000" -}}
{{- end -}}
{{- define "teku.p2pPort" -}}
{{- printf "9000" -}}
{{- end -}}
{{- define "nimbus.p2pPort" -}}
{{- printf "9000" -}}
{{- end -}}
{{- define "lodestar.p2pPort" -}}
{{- printf "9000" -}}
{{- end -}}

{{- define "beacon.p2pPort" -}}
{{- $p2pPort := index (dict "lighthouse" (include "lighthouse.p2pPort" .) "teku" (include "teku.p2pPort" .) "prysm" (include "prysm.p2pPort" .) "nimbus" (include "nimbus.p2pPort" .) "lodestar" (include "lodestar.p2pPort" .)) .Values.beacon.client -}}
{{- if $p2pPort -}}
{{- $p2pPort -}}
{{- else -}}
{{- fail "Invalid beacon client specified" -}}
{{- end -}}
{{- end -}}
