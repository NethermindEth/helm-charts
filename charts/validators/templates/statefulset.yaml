{{- if .Values.enabled }}
{{- $root := . -}}
{{- $counter := 0 }}
{{- range (untilStep (int .Values.validatorsKeyIndex) (int (add .Values.validatorsKeyIndex .Values.validatorsCount)) 1) }}

{{ $rpcEndpoints := list }}
{{- if $.Values.beaconChainRpcEndpointsRandomized }}
{{- $rpcList := list }}
{{- range (untilStep $counter (len $.Values.beaconChainRpcEndpointsRandomized) 1) }}
{{ $rpcList = append $rpcList (index $.Values.beaconChainRpcEndpointsRandomized .) }}
{{- end }}
{{ $rpcList = append $rpcList $.Values.beaconChainRpcEndpointsRandomized }}
{{ $rpcEndpoints = include "flatten" $rpcList }}
{{- if ge $counter (len $.Values.beaconChainRpcEndpointsRandomized) }}
  {{- $counter = 1 }}
{{- else }}
  {{ $counter = int (add1 $counter) }}
{{- end }}
{{- end }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "validators.fullname" $root }}-validator{{.}}
  labels:
    {{- include "validator.labels" $root | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "validators.selectorLabels" $root | nindent 6 }}
  serviceName: {{ template "validators.fullname" $root }}
  template:
    metadata:
      labels:
        {{- include "validators.selectorLabels" $root | nindent 8 }}
      annotations:
        checksum/configmap: {{ include (print $root.Template.BasePath "/configmap.yaml") $root | sha256sum }}
    spec:
      {{- with (concat $root.Values.imagePullSecrets $root.Values.global.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $root.Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with $root.Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with $root.Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with $root.Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with $root.Values.global.podSecurityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      serviceAccountName: {{ template "validators.fullname" $root }}
      priorityClassName: {{ $root.Values.priorityClassName | quote }}
      initContainers:
        - name: get-configs
          image: "{{ $root.Values.cliImage.repository }}:{{ $root.Values.cliImage.tag }}"
          imagePullPolicy: {{ $root.Values.cliImage.pullPolicy }}
          securityContext:
            {{- toYaml $root.Values.global.securityContext | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
          env:
            - name: WEB3SIGNER_URL
              value: {{ include "web3signer" $root }}
            {{- with $root.Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- toYaml $root.Values.envFrom | nindent 12 }}
          args:
            - "sync-validator-keys"
            - "--db-url"
            - "$(DB_KEYSTORE_URL)"
            - "--output-dir"
            - "/data"
            - "--index"
            - "{{ . }}"
            - "--no-of-keys"
            - "{{ $root.Values.validatorsNoOfKeys }}"
            {{- if not $root.Values.strictFeeRecipientCheck }}
            - "--no-strict-fee-recipient-check"
            {{- end }}
            {{- if eq $.Values.type "lodestar" }}
            - "--graffiti"
            - "{{ $root.Values.graffiti }}"
            {{- end }}
            {{- if not $root.Values.enableBuilder }}
            - "--no-proposal-builder-enabled"
            {{- end }}
            {{- if $root.Values.gasLimit }}
            - "--gas-limit"
            - "{{ $root.Values.gasLimit }}"
            {{- end }}
        - name: prepare
          image: "{{ $root.Values.initImage.repository }}:{{ $root.Values.initImage.tag }}"
          imagePullPolicy: {{ $root.Values.initImage.pullPolicy }}
          securityContext:
            {{- toYaml $root.Values.global.securityContext | nindent 12 }}
          env:
            - name: VALIDATOR_TYPE
              value: "{{ $root.Values.type }}"
            - name: DATA_DIR
              value: "/data"
            {{- if $root.Values.debug }}
            - name: DEBUG
              value: "true"
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: scripts
              mountPath: /scripts
              readOnly: true
          command:
            - sh
            - /scripts/prepare-validator.sh
      containers:
        - name: validator
          image: "{{ (pluck $root.Values.type $root.Values.image | first ).repository }}:{{ (pluck $root.Values.type $root.Values.image | first ).tag }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          {{- if eq $root.Values.type "lodestar" }}
          command:
            {{- include "validator-command-lodestar" (dict "Values" $root.Values "rpcEndpoints" $rpcEndpoints) | nindent 12 }}
          {{- else }}
          args:
            {{- if eq $root.Values.type "prysm" }}
            {{- include "validator-args-prysm" (dict "Values" $root.Values "rpcEndpoints" $rpcEndpoints) | nindent 12 }}
            {{- else if eq $root.Values.type "lighthouse" }}
            {{- include "validator-args-lighthouse" (dict "Values" $root.Values "rpcEndpoints" $rpcEndpoints) | nindent 12 }}
            {{- else if eq $root.Values.type "teku" }}
            {{- include "validator-args-teku" (dict "Values" $root.Values "rpcEndpoints" $rpcEndpoints) | nindent 12 }}
            {{- else if eq $root.Values.type "nimbus" }}
            {{- include "validator-args-nimbus" (dict "Values" $root.Values "rpcEndpoints" $rpcEndpoints) | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if $root.Values.metrics.enabled }}
          ports:
            - containerPort: {{ $root.Values.metrics.port }}
              name: metrics
              protocol: TCP
          {{- end }}
          {{- with (pluck $root.Values.type $root.Values.readinessProbe | first) }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with (pluck $root.Values.type $root.Values.livenessProbe | first) }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $root.Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ template "validators.fullname" $root }}-scripts
            defaultMode: 0755
{{- end }}
{{- end }}
