---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vouch.fullname" . }}
  labels:
    {{- include "vouch.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "vouch.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "vouch.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vouch.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vouch.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -ac
            - >
              apk add openssl;
              mkdir -p {{ .Values.vouchDataDir }}/{{ include "vouch.fullname" . }}/certs/;
              cp /config/vouch.yaml {{ .Values.vouchDataDir }}/;
              printenv vouch-ca.crt | base64 -d  > {{ .Values.vouchDataDir }}/{{ include "vouch.fullname" . }}/certs/ca.crt;
              printenv vouch-ca.key | base64 -d  > {{ .Values.vouchDataDir }}/{{ include "vouch.fullname" . }}/certs/ca.key;
              bash /scripts/generate_cert.sh {{ .Values.vouchDataDir }}/{{ include "vouch.fullname" . }}/certs/ ca {{ include "vouch.fullname" . }};
              chown -R {{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} {{ .Values.vouchDataDir }};
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
            - name: scripts
              mountPath: /scripts
        - name: sync-config
          image: "{{ .Values.cliImage.repository }}:{{ .Values.cliImage.tag }}"
          imagePullPolicy: {{ .Values.cliImage.pullPolicy }}
          securityContext:
            runAsNonRoot: {{ .Values.securityContext.runAsNonRoot | default true }}
            runAsUser: {{ .Values.securityContext.runAsUser | default 10000 }}
            fsGroup: {{ .Values.securityContext.fsGroup | default 10000 }}
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem | default true }}
            capabilities:
              drop:
                - ALL
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
          - "sync-vouch-config"
          - "--db-url-env"
          - "ESO_DB_KEYSTORE_URL"
          - "--vouch-dir"
          - "{{ .Values.vouchDataDir }}"
          - "--relays"
          - '{{ join "," .Values.relays }}'
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
            - name: scripts
              mountPath: /scripts
      containers:
        - name: vouch
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsNonRoot: {{ .Values.securityContext.runAsNonRoot | default true }}
            runAsUser: {{ .Values.securityContext.runAsUser | default 10000 }}
            fsGroup: {{ .Values.securityContext.fsGroup | default 10000 }}
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem | default true }}
            capabilities:
              drop:
                - ALL
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args: [ "--base-dir", "{{ .Values.vouchDataDir }}" ]
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          {{- with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
            - name: scripts
              mountPath: /scripts
          {{- if .Values.livenessProbe }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
              scheme: {{ .Values.readinessProbe.httpGet.scheme }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "vouch.fullname" . }}
        - name: scripts
          configMap:
            name: {{ include "vouch.fullname" . }}-scripts
        - name: data
          emptyDir:
            medium: Memory
            sizeLimit: 128Mi
