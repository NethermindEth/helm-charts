# Default values for erpc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/erpc/erpc
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

erpc:
  # -- Erpc required secret used for the init container.
  # All keys used for configurations secrets must be defined inside this secret resource.
  secret:
    name: ""

  # Erpc configuration.
  # This is used to generate the erpc.yaml file.
  # Ref: https://docs.erpc.cloud/config/example
  config:
    # -- Erpc log level.
    logLevel: warn

    # Erpc database configurations for requests cache.
    # Ref: https://docs.erpc.cloud/config/database
    database:
      evmJsonRpcCache:
        # -- Cache driver to be used. One of `memory` or `redis`.
        # Other drivers configurations will be ignored. DynamoDB and Postgres drivers are not supported at the moment.
        # Ref: https://docs.erpc.cloud/config/database
        driver: ""
        ## Memory
        # -- Maximum number of items to be cached.
        maxItems: 10000
        ## Redis
        redis:
          # -- Redis server address.
          addr: ""
          # -- Redis server password.
          password:
            secret:
              # Secret resource name.
              name: ""
              # Secret key.
              key: ""
          # -- Redis database to be used.
          db: ""
    # -- Erpc json-rpc server configuration.
    server:
      listenV4: true
      httpHostV4: "0.0.0.0"
      listenV6: false
      httpHostV6: "[::]"
      # httpPort: uses service.port

    # -- Erpc prometheus metrics server configuration.
    metrics:
      enabled: true
      listenV4: true
      hostV4: "0.0.0.0"
      listenV6: false
      hostV6: "[::]"
      # port: uses service.metricsPort

    # Erpc projects configuration.
    projects:
      - id: ""
        # -- Project authentication strategies.
        # Ref: https://docs.erpc.cloud/config/auth.
        # Only `secret` strategy is supported at the moment.
        auth:
          type: secret
          secretKey: ""
        # -- Project networks to be used.
        networks:
          - chainId: 1
            # -- Chain type to be used.
            # Only `evm` is supported at the moment.
            type: evm
            # -- Chain id of the network.
            # -- Failsafe policies to be used for this network.
            # Ref: https://docs.erpc.cloud/config/failsafe
            failsafe:
              {}
              # timeout:
              #   duration: 30s
              # retry:
              #   maxCount: 3
              #   delay: 500ms
              #   backoffMaxDelay: 10s
              #   backoffFactor: 0.3
              #   jitter: 500ms
              # hedge:
              #   delay: 500ms
              #   maxCount: 1

        upstreams:
          - id: ""
            # -- Upstream type to be used.
            type: evm
            # -- Upstream chain id to be used.
            chainId: 1
            # -- Upstream endpoint to be used.
            endpoint:
              # -- Optional secret key to be used.
              # This key is taken from the configured `erpc.secret` resource.
              secret:
                enabled: false
                key: ""
              # -- Optional endpoint value.
              # Ignored if the endpoint is using the `secret` configuration.
              value: ""
            # -- Failsafe policies to be used for this upstream.
            # Ref: https://docs.erpc.cloud/config/failsafe
            failsafe:
              {}
              # timeout:
              #   duration: 30s
              # retry:
              #   maxCount: 3
              #   delay: 500ms
              #   backoffMaxDelay: 10s
              #   backoffFactor: 0.3
              #   jitter: 500ms
              # circuitBreaker:
              #   failureThresholdCount: 30
              #   failureThresholdCapacity: 100
              #   halfOpenAfter: 60s
              #   successThresholdCount: 8
              #   successThresholdCapacity: 10

# -- Init image is used to generate the erpc config file.
initImage:
  repository: bash
  tag: "5.2"
  pullPolicy: IfNotPresent

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  metricsPort: 9000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: "2"
  #   memory: "3Gi"
  # requests:
  #   cpu: "2"
  #   memory: "3Gi"

# Use metrics endpoint as there is no healthcheck endpoint available
livenessProbe:
  httpGet:
    path: /metrics
    port: metrics
readinessProbe:
  httpGet:
    path: /metrics
    port: metrics

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
