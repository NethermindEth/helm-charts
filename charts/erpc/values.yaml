global:
  # -- Service account.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    create: false
    annotations: {}

  suffix: ""

  namespaceOverride: ""

# Erpc configurations
erpc:
  # -- Erpc deployment replica count.
  replicaCount: 3

  # -- Erpc image to be used.
  image:
    repository: ghcr.io/erpc/erpc
    tag: "0.0.23"
    pullPolicy: IfNotPresent

  # -- Erpc container resources.
  resources:
    requests:
      cpu: "2"
      memory: "3Gi"
    limits:
      cpu: "2"
      memory: "3Gi"

  # -- Erpc required secret used for the init container.
  # All keys used for configurations secrets must be defined inside this secret resource.
  secret:
    name: ""

  # Erpc configuration.
  # This is used to generate the erpc.yaml file.
  # Ref: https://docs.erpc.cloud/config/example
  config:
    # -- Erpc log level.
    logLevel: warn

    # Erpc database configurations for requests cache.
    # Ref: https://docs.erpc.cloud/config/database
    database:
      evmJsonRpcCache:
        # -- Cache driver to be used. One of `memory` or `redis`.
        # Other drivers configurations will be ignored. DynamoDB and Postgres drivers are not supported at the moment.
        # Ref: https://docs.erpc.cloud/config/database
        driver: ""
        ## Memory
        # -- Maximum number of items to be cached.
        maxItems: 10000
        ## Redis
        redis:
          # -- Redis server address.
          addr: ""
          # -- Redis server password.
          password:
            secret:
              # Secret resource name.
              name: ""
              # Secret key.
              key: ""
          # -- Redis database to be used.
          db: ""
    # -- Erpc json-rpc server configuration.
    server:
      listenV4: true
      httpHostV4: "0.0.0.0"
      listenV6: false
      httpHostV6: "[::]"
      httpPort: 4000

    # -- Erpc prometheus metrics server configuration.
    metrics:
      enabled: true
      listenV4: true
      hostV4: "0.0.0.0"
      listenV6: false
      hostV6: "[::]"
      port: 4001

    # Erpc projects configuration.
    projects:
      - id: ""
        # -- Project authentication strategies.
        # Ref: https://docs.erpc.cloud/config/auth.
        # Only `secret` strategy is supported at the moment.
        auth:
          type: secret
          secretKey: ""
        # -- Project networks to be used.
        networks:
          - chainId: 1
            # -- Chain type to be used.
            # Only `evm` is supported at the moment.
            type: evm
            # -- Chain id of the network.
            # -- Failsafe policies to be used for this network.
            # Ref: https://docs.erpc.cloud/config/failsafe
            failsafe:
              {}
              # timeout:
              #   duration: 30s
              # retry:
              #   maxCount: 3
              #   delay: 500ms
              #   backoffMaxDelay: 10s
              #   backoffFactor: 0.3
              #   jitter: 500ms
              # hedge:
              #   delay: 500ms
              #   maxCount: 1

        upstreams:
          - id: ""
            # -- Upstream type to be used.
            type: evm
            # -- Upstream chain id to be used.
            chainId: 1
            # -- Upstream endpoint to be used.
            endpoint:
              # -- Optional secret key to be used.
              # This key is taken from the configured `erpc.secret` resource.
              secret:
                enabled: false
                key: ""
              # -- Optional endpoint value.
              # Ignored if the endpoint is using the `secret` configuration.
              value: ""
            # -- Failsafe policies to be used for this upstream.
            # Ref: https://docs.erpc.cloud/config/failsafe
            failsafe:
              {}
              # timeout:
              #   duration: 30s
              # retry:
              #   maxCount: 3
              #   delay: 500ms
              #   backoffMaxDelay: 10s
              #   backoffFactor: 0.3
              #   jitter: 500ms
              # circuitBreaker:
              #   failureThresholdCount: 30
              #   failureThresholdCapacity: 100
              #   halfOpenAfter: 60s
              #   successThresholdCount: 8
              #   successThresholdCapacity: 10

# -- Init image is used to generate the erpc config file.
initImage:
  repository: bash
  tag: "5.2"
  pullPolicy: IfNotPresent

# -- Service account.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Annotations to add to the service account.
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

# Erpc Service configuration.
service:
  # -- Erpc Service type.
  type: ClusterIP
  # -- Erpc Service port.
  port: 80
  # -- Erpc Service metrics port.
  metricsPort: 9000
  # -- Erpc Service annotations.
  annotations: {}

# Erpc Ingress configuration.
ingress:
  # -- Enable Ingress.
  enabled: false
  # -- Ingress class name.
  className: ""

  # -- Route prefix.
  # Can skip it if any item of path has the path defined.
  routePrefix: /

  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}

  # -- Hostnames.
  # Can be provided if Ingress is enabled.
  hosts: []
  # hosts:
  #   - host: espresso.example.com
  #     -- Paths to use for ingress rules
  #     paths:
  #       - path: "/metrics"
  #         port: 9000
  #         pathType: "Prefix"
  #       - path: "/api"
  #         port: 8080
  #         pathType: "Exact"
  #       - path: "/health"
  #         port: 8085
  #         pathType: "Prefix"
  #         serviceName: "alternativeServiceName"
  #   - paths:
  #       - path: "/metrics"
  #         port: 9000
  #         pathType: "Prefix"
  #     By default, the Service created by this chart is used as the target
  #     Service for the Ingress.
  #     If not defined the following default object will be used:
  #     hosts:
  #       paths:
  #       - path: "/"
  #         port: 8000
  #         pathType: "ImplementationSpecific"
  #         serviceName: "<common.names.fullname>"

  # -- TLS configuration for Ingress
  # Secret must be manually created in the namespace
  #
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
