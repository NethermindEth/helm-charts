name: Trivy

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Package Local Dependencies
        working-directory: ${{ github.workspace }}
        run: |
          # 1. Setup and cleanup
          echo "Setting up environment..."
          rm -rf .helm-repo
          mkdir -p .helm-repo
          helm repo remove local-repo 2>/dev/null || true

          if [ ! -d "charts" ]; then
            echo "Error: charts directory not found"
            exit 1
          fi

          # 2. Identify and package base charts (charts with no dependencies)
          echo "Identifying and packaging base charts..."
          cd charts
          for chart in */; do
            if [ -f "$chart/Chart.yaml" ]; then
              if ! grep -q "^dependencies:" "$chart/Chart.yaml"; then
                echo "Packaging base chart: $chart"
                helm package "$chart" -d ../.helm-repo/
              fi
            fi
          done

          # 3. Setup local repository
          echo "Setting up local repository..."
          cd ../.helm-repo
          helm repo index .
          helm repo add local-repo file://$PWD
          helm repo update
          cd ../charts

          # 4. Process charts with dependencies
          echo "Processing charts with dependencies..."
          for chart in */; do
            if [ -f "$chart/Chart.yaml" ]; then
              if grep -q "^dependencies:" "$chart/Chart.yaml"; then
                echo "Processing dependent chart: $chart"
                mkdir -p "$chart/charts"
                helm dependency update "$chart"
                helm package "$chart" -d ../.helm-repo/
              fi
            fi
          done

          cd ..

      - name: Run Trivy
        uses: aquasecurity/trivy-action@5681af892cd0f4997658e2bacc62bd0a894cf564 #v0.27.0
        with:
          scan-type: 'config'
          scan-ref: './charts'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          skip-dirs: 'charts/*/charts'
          skip-files: '*.tgz'
          hide-progress: false
          scanners: 'config'
          timeout: '10m'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@5618c9fc1e675841ca52c1c6b1304f5255a905a0 #v2.19.0
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'Helm Template Security'
