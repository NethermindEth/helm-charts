name: Trivy

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 #v4.2.1

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Package Local Dependencies
        run: |
          # Clean up any previous attempts
          rm -rf .helm-repo
          find charts -name "charts" -type d -exec rm -rf {} +
          helm repo remove local-repo 2>/dev/null || true

          # Create a local helm repository
          mkdir -p .helm-repo

          cd charts
          echo "Creating charts directories..."
          for dir in */; do
            if [ -f "${dir}Chart.yaml" ]; then
              mkdir -p "${dir}charts"
              echo "Created charts directory for ${dir}"
            fi
          done

          # First package charts without dependencies
          echo "Packaging base charts..."
          for dir in common generic-app; do
            if [ -d "$dir" ] && [ -f "${dir}Chart.yaml" ]; then
              echo "Packaging ${dir}"
              helm package "${dir}" -d ../.helm-repo/
            fi
          done

          # Create initial helm repository index
          cd ../.helm-repo
          helm repo index .
          cd ../charts

          # Add the local repo
          helm repo add local-repo file://$PWD/../.helm-repo
          helm repo update

          # Update dependencies for charts that need them
          echo "Updating dependencies for dependent charts..."
          for dir in execution-beacon generic-deployment generic-statefulset; do
            if [ -d "$dir" ] && [ -f "${dir}Chart.yaml" ]; then
              echo "Updating dependencies for ${dir}"
              helm dependency update "${dir}"
            fi
          done

          # Now package all remaining charts
          echo "Packaging remaining charts..."
          for dir in */; do
            if [ -f "${dir}Chart.yaml" ] && [ "$dir" != "common/" ] && [ "$dir" != "generic-app/" ]; then
              echo "Packaging ${dir}"
              helm package "${dir}" -d ../.helm-repo/
            fi
          done

          cd ../.helm-repo
          helm repo index .
          cd ../charts

          # Final dependency update for all charts
          echo "Final dependency update..."
          for dir in */; do
            if [ -f "${dir}Chart.yaml" ]; then
              echo "Updating dependencies for ${dir}"
              helm dependency update "${dir}" || echo "No dependencies to build in ${dir}"
              echo "Contents of ${dir}charts/:"
              ls -la "${dir}charts/" || echo "Directory empty"
            fi
          done
          cd ..

      - name: Run Trivy
        uses: aquasecurity/trivy-action@5681af892cd0f4997658e2bacc62bd0a894cf564 #v0.27.0
        with:
          scan-type: 'config'
          scan-ref: './charts'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          skip-dirs: 'charts/*/charts'
          skip-files: '*.tgz'
          hide-progress: false
          scanners: 'config'
          timeout: '10m'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@5618c9fc1e675841ca52c1c6b1304f5255a905a0 #v2.19.0
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'Helm Template Security'
